openapi: 3.0.3
info:
  title: DT SMS Gateway API
  version: 1.0.0
  description: |
    API REST pour l'envoi de SMS en masse et individuel via DT SMS Gateway.
    
    ## Authentification
    Toutes les requêtes API (sauf health check) nécessitent une clé API valide dans l'en-tête `Authorization: Bearer YOUR_API_KEY`.
    
    ## Limites
    - **Quotas journaliers/mensuels** : Définis par client
    - **Rate limiting** : Selon la configuration client
    - **Taille des messages** : 160 caractères par SMS standard
    
    ## Formats de numéros
    - **Format Djibouti** : `77XXXXXX` ou `+25377XXXXXX`
    - **International** : `+[code_pays][numéro]`
    
    ## Statuts SMS
    - `pending` : En attente d'envoi
    - `sent` : Envoyé au gateway
    - `delivered` : Livré au destinataire  
    - `failed` : Échec d'envoi
  contact:
    name: KASSIM MOUSSA ALI
    url: https://mysms.djiboutitelecom.dj/support
    email: kassim.moussa@djibtel.dj
  license:
    name: Proprietary
    url: https://mysms.djiboutitelecom.dj/license

servers:
  - url: https://mysms.djiboutitelecom.dj/api
    description: Production 
  - url: http://localhost:8000/api
    description: Développement local

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      tags:
        - Health Check
      summary: Vérifier l'état du service
      description: Endpoint de santé pour vérifier que l'API est opérationnelle
      security: []
      responses:
        '200':
          description: Service opérationnel
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  service:
                    type: string
                    example: "DT SMS Gateway"
                  version:
                    type: string
                    example: "1.0.0"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-09-24T10:30:00Z"

  /v1/sms/send:
    post:
      tags:
        - SMS Individual
      summary: Envoyer un SMS individuel
      description: |
        Envoie un SMS à un destinataire unique.
        
        **Limite** : Soumis aux quotas journaliers/mensuels du client.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - to
                - message
              properties:
                to:
                  type: string
                  description: "Numéro du destinataire (format Djibouti: 77XXXXXX ou +25377XXXXXX)"
                  example: "77166677"
                  pattern: "^(\\+253)?77[0-9]{6}$"
                message:
                  type: string
                  description: "Contenu du message SMS"
                  example: "Bonjour, ceci est un message test."
                  maxLength: 160
                async:
                  type: boolean
                  description: "Envoyer de façon asynchrone via queue"
                  default: false
                  example: false
            examples:
              sms_simple:
                summary: SMS simple
                value:
                  to: "77166677"
                  message: "Votre code de vérification est: 123456"
              sms_avec_expediteur:
                summary: SMS avec expéditeur personnalisé
                value:
                  to: "+25377166677"
                  message: "Bienvenue chez DT SMS Gateway!"
      responses:
        '200':
          description: SMS envoyé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "SMS sent successfully"
                  data:
                    type: object
                    properties:
                      sms_id:
                        type: integer
                        example: 12345
                        description: "ID unique du SMS"
                      to:
                        type: string
                        example: "+25377166677"
                      from:
                        type: string
                        example: "DT SMS"
                      status:
                        type: string
                        enum: [pending, sent, delivered, failed]
                        example: "sent"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-09-24T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '422':
          $ref: '#/components/responses/ValidationError'

  /v1/sms:
    get:
      tags:
        - SMS Individual
      summary: Lister les SMS envoyés
      description: Récupère l'historique des SMS avec filtrage et pagination
      parameters:
        - name: status
          in: query
          description: Filtrer par statut
          schema:
            type: string
            enum: [pending, sent, delivered, failed]
        - name: from_date
          in: query
          description: Date de début (format ISO 8601)
          schema:
            type: string
            format: date-time
            example: "2025-09-01T00:00:00Z"
        - name: to_date
          in: query
          description: Date de fin (format ISO 8601)
          schema:
            type: string
            format: date-time
            example: "2025-09-30T23:59:59Z"
        - name: to
          in: query
          description: Filtrer par numéro destinataire
          schema:
            type: string
            example: "77166677"
        - name: page
          in: query
          description: Numéro de page
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Éléments par page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Liste des SMS
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SmsMessage'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /v1/sms/{id}/status:
    get:
      tags:
        - SMS Individual  
      summary: Statut d'un SMS
      description: Récupère le statut détaillé d'un SMS spécifique
      parameters:
        - name: id
          in: path
          required: true
          description: ID du SMS
          schema:
            type: integer
            example: 12345
      responses:
        '200':
          description: Statut du SMS
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/SmsMessage'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/sms/bulk:
    post:
      tags:
        - SMS Bulk
      summary: Créer une campagne SMS
      description: |
        Crée une campagne d'envoi SMS en masse. 
        
        **Limites** :
        - Maximum 10,000 destinataires par campagne
        - Soumis aux quotas journaliers/mensuels
        - Rate limiting configurable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipients
                - content
              properties:
                name:
                  type: string
                  description: "Nom de la campagne"
                  example: "Campagne Marketing Q4"
                  maxLength: 255
                recipients:
                  type: array
                  description: "Liste des numéros destinataires"
                  minItems: 1
                  maxItems: 10000
                  items:
                    type: string
                    pattern: "^(\\+253)?77[0-9]{6}$"
                  example: ["77123456", "77987654", "77555333"]
                content:
                  type: string
                  description: "Contenu du message"
                  maxLength: 1600
                  example: "Offre spéciale! Profitez de 50% de réduction aujourd'hui seulement!"
                scheduled_at:
                  type: string
                  format: date-time
                  description: "Date de programmation (optionnelle)"
                  example: "2025-09-15T15:00:00Z"
                settings:
                  type: object
                  description: "Paramètres avancés"
                  properties:
                    rate_limit:
                      type: integer
                      description: "Limite de débit (SMS par minute)"
                      minimum: 1
                      maximum: 1000
                      default: 30
                      example: 30
                    batch_size:
                      type: integer
                      description: "Taille des lots de traitement"
                      minimum: 10
                      maximum: 500
                      default: 100
                      example: 100
            examples:
              campagne_simple:
                summary: Campagne simple
                value:
                  name: "Notification Clients"
                  recipients: ["77123456", "77987654"]
                  content: "Cher client, votre commande est prête."
              campagne_programmee:
                summary: Campagne programmée
                value:
                  name: "Marketing Weekend"
                  recipients: ["77111111", "77222222", "77333333"]
                  content: "Weekend Special: 30% off all products!"
                  scheduled_at: "2025-09-28T09:00:00Z"
                  settings:
                    rate_limit: 60
                    batch_size: 50
      responses:
        '201':
          description: Campagne créée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Bulk SMS job created successfully"
                  data:
                    $ref: '#/components/schemas/BulkSmsJob'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimited'

    get:
      tags:
        - SMS Bulk
      summary: Lister les campagnes SMS
      description: Récupère la liste des campagnes avec pagination
      parameters:
        - name: status
          in: query
          description: Filtrer par statut
          schema:
            type: string
            enum: [pending, processing, completed, failed, paused]
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Liste des campagnes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BulkSmsJob'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /v1/sms/bulk/{jobId}:
    get:
      tags:
        - SMS Bulk
      summary: Statut d'une campagne
      description: Récupère le statut détaillé d'une campagne SMS
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Statut de la campagne
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    allOf:
                      - $ref: '#/components/schemas/BulkSmsJob'
                      - type: object
                        properties:
                          estimated_duration:
                            type: integer
                            description: "Durée estimée en secondes"
                            example: 300
                          failure_reason:
                            type: string
                            description: "Raison de l'échec (si applicable)"
                            example: null
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/sms/bulk/{jobId}/pause:
    post:
      tags:
        - SMS Bulk
      summary: Mettre en pause une campagne
      description: Suspend l'exécution d'une campagne en cours
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Campagne mise en pause
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Job paused successfully"
                  data:
                    type: object
                    properties:
                      job_id:
                        type: integer
                        example: 123
                      status:
                        type: string
                        example: "paused"
        '400':
          description: Action non autorisée pour ce statut
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Cannot pause job in current status: completed"

  /v1/sms/bulk/{jobId}/resume:
    post:
      tags:
        - SMS Bulk
      summary: Reprendre une campagne
      description: Relance l'exécution d'une campagne en pause
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Campagne reprise
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Job resumed successfully"
                  data:
                    type: object
                    properties:
                      job_id:
                        type: integer
                        example: 123
                      status:
                        type: string
                        example: "processing"

  /v1/stats:
    get:
      tags:
        - Statistiques
      summary: Statistiques générales
      description: Récupère les statistiques d'utilisation SMS du client
      parameters:
        - name: period
          in: query
          description: Période des statistiques
          schema:
            type: string
            enum: [today, week, month, year]
            default: month
        - name: start_date
          in: query
          description: Date de début personnalisée
          schema:
            type: string
            format: date
            example: "2025-09-01"
        - name: end_date
          in: query
          description: Date de fin personnalisée
          schema:
            type: string
            format: date
            example: "2025-09-30"
      responses:
        '200':
          description: Statistiques
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      period:
                        type: string
                        example: "month"
                      total_sms:
                        type: integer
                        example: 1250
                      sent_sms:
                        type: integer
                        example: 1200
                      delivered_sms:
                        type: integer
                        example: 1150
                      failed_sms:
                        type: integer
                        example: 50
                      success_rate:
                        type: number
                        format: float
                        example: 96.0
                      total_campaigns:
                        type: integer
                        example: 15
                      daily_usage:
                        type: integer
                        example: 85
                      daily_limit:
                        type: integer
                        example: 1000
                      monthly_usage:
                        type: integer
                        example: 1250
                      monthly_limit:
                        type: integer
                        example: 25000

  /v1/stats/realtime:
    get:
      tags:
        - Statistiques
      summary: Statistiques temps réel
      description: Statistiques en temps réel pour monitoring
      responses:
        '200':
          description: Statistiques temps réel
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_hour_sms:
                        type: integer
                        example: 45
                      last_24h_sms:
                        type: integer
                        example: 320
                      active_campaigns:
                        type: integer
                        example: 2
                      pending_sms:
                        type: integer
                        example: 150
                      queue_status:
                        type: string
                        enum: [active, idle, overloaded]
                        example: "active"
                      last_sms_sent:
                        type: string
                        format: date-time
                        example: "2025-09-24T10:28:00Z"

components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Clé API à inclure dans l'en-tête Authorization.
        Format: `Authorization: Bearer YOUR_API_KEY`

  schemas:
    SmsMessage:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        to:
          type: string
          example: "+25377166677"
        from:
          type: string
          example: "DT SMS"
        content:
          type: string
          example: "Votre message SMS"
        status:
          type: string
          enum: [pending, sent, delivered, failed]
          example: "delivered"
        error_message:
          type: string
          example: null
          nullable: true
        sent_at:
          type: string
          format: date-time
          example: "2025-09-24T10:30:00Z"
          nullable: true
        delivered_at:
          type: string
          format: date-time
          example: "2025-09-24T10:30:05Z"
          nullable: true
        created_at:
          type: string
          format: date-time
          example: "2025-09-24T10:30:00Z"

    BulkSmsJob:
      type: object
      properties:
        job_id:
          type: integer
          example: 123
        name:
          type: string
          example: "Marketing Campaign Q4"
        status:
          type: string
          enum: [pending, processing, completed, failed, paused]
          example: "processing"
        progress_percentage:
          type: number
          format: float
          example: 65.5
        total_count:
          type: integer
          example: 1000
        sent_count:
          type: integer
          example: 655
        failed_count:
          type: integer
          example: 12
        pending_count:
          type: integer
          example: 333
        success_rate:
          type: number
          format: float
          example: 98.2
        scheduled_at:
          type: string
          format: date-time
          example: "2025-09-15T15:00:00Z"
          nullable: true
        started_at:
          type: string
          format: date-time
          example: "2025-09-24T10:00:00Z"
          nullable: true
        completed_at:
          type: string
          format: date-time
          example: null
          nullable: true
        created_at:
          type: string
          format: date-time
          example: "2025-09-24T09:30:00Z"

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        last_page:
          type: integer
          example: 8

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Une erreur est survenue"
        errors:
          type: object
          additionalProperties: 
            type: array
            items:
              type: string
          example:
            to: ["Le champ to est requis."]
            message: ["Le message ne peut pas dépasser 160 caractères."]

  responses:
    BadRequest:
      description: Requête invalide
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  message:
                    example: "Requête invalide"

    Unauthorized:
      description: Non autorisé - Clé API invalide ou manquante
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  message:
                    example: "Clé API invalide ou manquante"

    NotFound:
      description: Ressource non trouvée
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  message:
                    example: "Ressource non trouvée"

    ValidationError:
      description: Erreur de validation
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  message:
                    example: "Validation failed"

    RateLimited:
      description: Limite de débit dépassée
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  message:
                    example: "Daily SMS quota exceeded"
          examples:
            daily_quota_exceeded:
              summary: Quota journalier dépassé
              value:
                success: false
                message: "Daily SMS quota exceeded"
                limit: 1000
                used_today: 1000
                remaining: 0
            monthly_quota_exceeded:
              summary: Quota mensuel dépassé  
              value:
                success: false
                message: "Monthly SMS quota exceeded"
                limit: 25000
                used_this_month: 25000
                remaining: 0

tags:
  - name: Health Check
    description: Vérification de l'état du service
  - name: SMS Individual
    description: Envoi et gestion de SMS individuels
  - name: SMS Bulk
    description: Envoi et gestion de campagnes SMS en masse
  - name: Statistiques
    description: Statistiques d'utilisation et monitoring